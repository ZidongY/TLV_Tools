# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainUI.ui'
#
# Created by: PyQt5 UI code generator 5.13.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(720, 640)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/image/image/icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.lbl_raw = QtWidgets.QLabel(self.centralwidget)
        self.lbl_raw.setObjectName("lbl_raw")
        self.verticalLayout.addWidget(self.lbl_raw)
        self.te_rawData = QtWidgets.QPlainTextEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.te_rawData.sizePolicy().hasHeightForWidth())
        self.te_rawData.setSizePolicy(sizePolicy)
        self.te_rawData.setTabChangesFocus(True)
        self.te_rawData.setPlainText("")
        self.te_rawData.setTabStopWidth(40)
        self.te_rawData.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextEditable|QtCore.Qt.TextEditorInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.te_rawData.setBackgroundVisible(False)
        self.te_rawData.setCenterOnScroll(False)
        self.te_rawData.setObjectName("te_rawData")
        self.verticalLayout.addWidget(self.te_rawData)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.chb_extTag = QtWidgets.QCheckBox(self.centralwidget)
        self.chb_extTag.setChecked(False)
        self.chb_extTag.setTristate(False)
        self.chb_extTag.setObjectName("chb_extTag")
        self.horizontalLayout.addWidget(self.chb_extTag)
        self.le_extTag = QtWidgets.QLineEdit(self.centralwidget)
        self.le_extTag.setEnabled(False)
        self.le_extTag.setClearButtonEnabled(False)
        self.le_extTag.setObjectName("le_extTag")
        self.horizontalLayout.addWidget(self.le_extTag)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.btn_decoding = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_decoding.sizePolicy().hasHeightForWidth())
        self.btn_decoding.setSizePolicy(sizePolicy)
        self.btn_decoding.setObjectName("btn_decoding")
        self.horizontalLayout.addWidget(self.btn_decoding)
        self.btn_clsRaw = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_clsRaw.sizePolicy().hasHeightForWidth())
        self.btn_clsRaw.setSizePolicy(sizePolicy)
        self.btn_clsRaw.setObjectName("btn_clsRaw")
        self.horizontalLayout.addWidget(self.btn_clsRaw)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.lbl_struct = QtWidgets.QLabel(self.centralwidget)
        self.lbl_struct.setObjectName("lbl_struct")
        self.verticalLayout.addWidget(self.lbl_struct)
        self.te_structData = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.te_structData.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.te_structData.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.te_structData.setTabStopWidth(40)
        self.te_structData.setObjectName("te_structData")
        self.verticalLayout.addWidget(self.te_structData)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.btn_encoding = QtWidgets.QPushButton(self.centralwidget)
        self.btn_encoding.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_encoding.sizePolicy().hasHeightForWidth())
        self.btn_encoding.setSizePolicy(sizePolicy)
        self.btn_encoding.setObjectName("btn_encoding")
        self.horizontalLayout_2.addWidget(self.btn_encoding)
        self.btn_clsStruct = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_clsStruct.sizePolicy().hasHeightForWidth())
        self.btn_clsStruct.setSizePolicy(sizePolicy)
        self.btn_clsStruct.setObjectName("btn_clsStruct")
        self.horizontalLayout_2.addWidget(self.btn_clsStruct)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(9)
        self.statusbar.setFont(font)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "TLV数据工具箱"))
        MainWindow.setToolTip(_translate("MainWindow", "BER-TLV数据解析与封装"))
        MainWindow.setStatusTip(_translate("MainWindow", "工具版本：v1.0.0        作者：Zidong.Yin        日期：2019.10.06"))
        self.lbl_raw.setText(_translate("MainWindow", "TLV数据（Raw Data）"))
        self.te_rawData.setToolTip(_translate("MainWindow", "输入16进制待解析数据，不区分大小写，可带 ’0x\' 前缀。"))
        self.chb_extTag.setToolTip(_translate("MainWindow", "设置不符合BER-TLV编码规则的Tag(单字节)。\n"
"输入多个Tag时，以 \'空格\' 分割"))
        self.chb_extTag.setText(_translate("MainWindow", "设置特殊Tag"))
        self.le_extTag.setToolTip(_translate("MainWindow", "设置不符合BER-TLV编码规则的Tag(单字节)。\n"
"输入多个Tag时，以 \'空格\' 分割"))
        self.btn_decoding.setText(_translate("MainWindow", "解析"))
        self.btn_clsRaw.setText(_translate("MainWindow", "清空"))
        self.lbl_struct.setText(_translate("MainWindow", "数据解析（Structure Data）"))
        self.te_structData.setToolTip(_translate("MainWindow", "每行是一个TLV数据对象，缩进表示嵌套级别"))
        self.btn_encoding.setText(_translate("MainWindow", "封装"))
        self.btn_clsStruct.setText(_translate("MainWindow", "清空"))
